# MIT License
#
# Copyright (c) 2021 Yansong Li
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
"""Bundles ReverseWidget application and all its dependencies into a single package.

This script outputs a single Python package from PyInstaller. And we also integrate
necessary resources isolated from PyInstaller.
"""
"""将PythonGUI程序转换为一个包文件，解决依赖问题。
"""

# -*- coding: utf-8 -*-
import shutil
import os
import sys


def copy_dir(src_dir, dst_dir):
    """
    Copy src_dir to dst_dir
    :param src_dir: source directory
    :param dst_dir: destination directory
    :return: null
    """
    if not os.path.exists(dst_dir):
        os.makedirs(dst_dir)
    if os.path.exists(src_dir):
        for file in os.listdir(src_dir):
            file_path = os.path.join(src_dir, file)
            dst_path = os.path.join(dst_dir, file)
            if os.path.isfile(os.path.join(src_dir, file)):
                shutil.copy(file_path, dst_path)
            else:
                copy_dir(file_path, dst_path)


def copy_file(src_file, dst_dir):
    """
    Copy file to dst_dir
    :param src_file: source file
    :param dst_dir: destination directory
    :return: null
    """
    if not os.path.exists(dst_dir):
        os.makedirs(dst_dir)
    shutil.copy(src_file, dst_dir)


def get_py_path():
    """
    Get current python lib path
    :return: python lib path
    """
    for i in sys.path:
        if 'site-packages' in i:
            return i


def main():
    # 1.PyInstaller bundles a Python application and all its dependencies into a single package.
    if len(sys.argv) == 1:
        os.system('pyinstaller -D -y -i ui\\resources\\pictures\\hacker.ico main.py')
    elif (sys.argv[1]) == 'release':
        # Need to modify main.spec Console=False
        os.system('pyinstaller -y main.spec')
    dst_path = 'dist/main/'
    src_path = []

    # 2.Copy resource files to package generated by PyInstaller
    copy_dir('ui/resources', dst_path + 'ui/resources')
    copy_file(get_py_path() + '/peid/userdb.txt', dst_path + '/peid')
    src_path.append('VERSION')
    if sys.platform == 'win32':
        src_path.append(get_py_path() + '/keystone/keystone.dll')
        src_path.append(get_py_path() + '/capstone/lib/capstone.dll')
    elif sys.platform == 'linux':
        src_path.append(get_py_path() + '/keystone/libkeystone.so')
        src_path.append(get_py_path() + '/capstone/lib/libcapstone.so')
    elif sys.platform == 'darwin':
        src_path.append(get_py_path() + '/keystone/libkeystone.dylib')
        src_path.append(get_py_path() + '/capstone/lib/libcapstone.dylib')
    for i in src_path:
        shutil.copy(i, dst_path)

    # 3.Create shortcut
    # if sys.platform == 'linux':
        # os.system('ln -s ./main/main ReverseWidget')


if __name__ == '__main__':
    main()
